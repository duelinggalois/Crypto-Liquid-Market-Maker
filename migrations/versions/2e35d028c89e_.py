"""first database schema migration

Revision ID: 2e35d028c89e
Revises: 
Create Date: 2019-09-17 21:16:49.743442

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2e35d028c89e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('pair', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('exchange_id', sa.String(length=40), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('pair', sa.String(length=15), nullable=True),
    sa.Column('side', sa.String(length=4), nullable=True),
    sa.Column('price', sa.Numeric(precision=13, scale=5), nullable=True),
    sa.Column('size', sa.Numeric(precision=12, scale=8), nullable=True),
    sa.Column('filled', sa.Numeric(precision=12, scale=8), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=True),
    sa.Column('post_only', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trading_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('pair', sa.String(length=15), nullable=True),
    sa.Column('budget', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('min_size', sa.Numeric(precision=7, scale=4), nullable=True),
    sa.Column('low_price', sa.Numeric(precision=17, scale=9), nullable=True),
    sa.Column('initial_mid_price', sa.Numeric(precision=17, scale=9), nullable=True),
    sa.Column('high_price', sa.Numeric(precision=17, scale=9), nullable=True),
    sa.Column('size_change', sa.Numeric(precision=12, scale=9), nullable=True),
    sa.Column('api_enum', sa.Enum('NoopApi', 'CoinbasePro', 'CoinbaseProTest', name='apienum'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trading_terms')
    op.drop_table('orders')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('books')
    # ### end Alembic commands ###


def upgrade_test():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('pair', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('exchange_id', sa.String(length=40), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('pair', sa.String(length=15), nullable=True),
    sa.Column('side', sa.String(length=4), nullable=True),
    sa.Column('price', sa.Numeric(precision=13, scale=5), nullable=True),
    sa.Column('size', sa.Numeric(precision=12, scale=8), nullable=True),
    sa.Column('filled', sa.Numeric(precision=12, scale=8), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=True),
    sa.Column('post_only', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trading_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('pair', sa.String(length=15), nullable=True),
    sa.Column('budget', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('min_size', sa.Numeric(precision=7, scale=4), nullable=True),
    sa.Column('low_price', sa.Numeric(precision=17, scale=9), nullable=True),
    sa.Column('initial_mid_price', sa.Numeric(precision=17, scale=9), nullable=True),
    sa.Column('high_price', sa.Numeric(precision=17, scale=9), nullable=True),
    sa.Column('size_change', sa.Numeric(precision=12, scale=9), nullable=True),
    sa.Column('api_enum', sa.Enum('NoopApi', 'CoinbasePro', 'CoinbaseProTest', name='apienum'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_test():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trading_terms')
    op.drop_table('orders')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('books')
    # ### end Alembic commands ###

